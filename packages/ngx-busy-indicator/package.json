{
  "name": "@pratico/ngx-busy-indicator",
  "version": "1.0.0",
  "description": "Template component which only show the inner content while the observable is processing",
  "main": "./bundles/pratico.ngx-busy-indicator.umd.js",
  "module": "./modules/pratico.ngx-busy-indicator.es5.js",
  "es2015": "./modules/pratico.ngx-busy-indicator.js",
  "private": false,
  "scripts": {
    "rmdist": "../../node_modules/.bin/rimraf ./dist",
    "rm-ngc-residual": "../../node_modules/.bin/rimraf ./dist/node_modules",
    "build:aot": "yarn rmdist && ../../node_modules/.bin/ngc -p src/tsconfig.aot.json && yarn rm-ngc-residual",
    "build:umd": "../../node_modules/.bin/webpack",
    "prepublish": "yarn build:aot && yarn build:umd",
    "test": "../../node_modules/.bin/jest"
  },
  "typings": "dist/index.d.ts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pratico-web/busy-indicator.git"
  },
  "keywords": [
    "rxjs",
    "pratico",
    "pratical"
  ],
  "author": "Abner Oliveira",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/pratico-web/rx/issues"
  },
  "homepage": "https://github.com/pratico-web/rx#readme",
  "peerDependencies": {
    "@angular/core": "angular/core-builds"
  },
  "jest": {
    "globals": {
      "__TS_CONFIG__": "./tsconfig.json"
    },
    "moduleFileExtensions": [
      "ts",
      "js",
      "svg"
    ],
    "collectCoverage": false,
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/index.ts",
      "!src/**/*.svg",
      "!src/**/*.sketch.ts",
      "!src/**/index.ts",
      "!src/**/*.module.ts",
      "!**/node_modules"
    ],
    "coverageDirectory": "./coverage",
    "coverageReporters": [
      "json",
      "html",
      "text"
    ],
    "setupTestFrameworkScriptFile": "<rootDir>../../test/jest.ts",
    "transform": {
      "\\.(svg)$": "<rootDir>../../test/svg-file-transformer.js",
      "^.+\\.(ts|tsx|js|html)$": "<rootDir>../..//node_modules/ts-jest/preprocessor.js"
    },
    "testResultsProcessor": "<rootDir>../../node_modules/ts-jest/coverageprocessor.js",
    "verbose": true,
    "testRegex": ".*\\.spec\\.(ts)$"
  }
}
